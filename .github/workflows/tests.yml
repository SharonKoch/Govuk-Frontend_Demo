name: Tests

on:
  pull_request:

  push:
    branches:
      - main
      - 'feature/**'
      - 'support/**'

  workflow_dispatch:
    inputs:
      runner:
        description: Run tests on
        type: choice
        default: ubuntu-latest
        options:
          - macos-latest
          - ubuntu-latest
          - windows-latest

concurrency:
  group: tests-${{ inputs.runner || 'ubuntu-latest' }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}

    env:
      PUPPETEER_SKIP_DOWNLOAD: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-node

  build:
    name: Build
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    needs: [install]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Build
        uses: ./.github/workflows/actions/build

      - name: Type declarations
        run: npm run build:types

  lint:
    name: ${{ matrix.task.description }}
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    needs: [install]

    strategy:
      fail-fast: false

      matrix:
        task:
          - description: Lint Sass
            name: lint-scss
            run: npm run lint:scss
            cache: .cache/stylelint

          - description: Lint JavaScript
            name: lint-js
            run: npm run lint:js
            cache: .cache/eslint

          - description: EditorConfig
            name: lint-editorconfig
            run: npm run lint:editorconfig

          - description: Prettier
            name: lint-prettier
            run: npm run lint:prettier
            cache: .cache/prettier

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Cache linter
        if: ${{ matrix.task.cache }}
        uses: actions/cache@v3
        with:
          enableCrossOsArchive: true
          key: ${{ matrix.task.name }}-${{ runner.os }}
          path: ${{ matrix.task.cache }}

      - name: Run lint task
        run: ${{ matrix.task.run }}

  test:
    name: ${{ matrix.task.description }}
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    needs: [install, build]

    env:
      # Use 2x CPU cores unless on Windows (runs slower when concurrent)
      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      MAX_WORKERS: ${{ inputs.runner == 'windows-latest' && '1' || '2' }}

    strategy:
      fail-fast: false

      matrix:
        task:
          - description: Nunjucks macro tests
            name: test-macro
            cache: .cache/jest
            projects:
              - Nunjucks macro tests

          - description: JavaScript unit tests
            name: test-unit
            cache: .cache/jest
            projects:
              - JavaScript unit tests

          - description: JavaScript behaviour tests
            name: test-behaviour
            cache: .cache/jest
            projects:
              - JavaScript behaviour tests

          - description: JavaScript component tests
            name: test-component
            cache: |
              .cache/jest
              .cache/puppeteer
            projects:
              - JavaScript component tests

          - description: Accessibility tests
            name: test-accessibility
            cache: |
              .cache/jest
              .cache/puppeteer
            projects:
              - Accessibility tests

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Restore build
        uses: ./.github/workflows/actions/build

      - name: Cache task
        if: ${{ matrix.task.cache }}
        uses: actions/cache@v3
        with:
          enableCrossOsArchive: true
          key: ${{ matrix.task.name }}-${{ runner.os }}
          path: ${{ matrix.task.cache }}

      - name: Run test task
        run: npx jest --color ${{ format('--maxWorkers={0} --selectProjects "{1}"', env.MAX_WORKERS, join(matrix.task.projects, '", "')) }}

      - name: Save test coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.task.description }} coverage
          path: coverage
          if-no-files-found: ignore

  verify:
    name: ${{ matrix.task.description }}
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    needs: [install, build]

    # Skip when scheduled or run manually
    if: ${{ !inputs.runner }}

    strategy:
      fail-fast: false

      matrix:
        task:
          - description: Verify package build
            name: test-build-package
            run: npm run build:package

          - description: Verify distribution build
            name: test-build-release
            run: npm run build:release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Restore build
        uses: ./.github/workflows/actions/build

      - name: Run verify task
        run: ${{ matrix.task.run }}

  package:
    name: Export ${{ matrix.conditions }}, Node.js ${{ matrix.node-version }}
    runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
    needs: [install, build]

    # Skip when scheduled or run manually
    if: ${{ !inputs.runner }}

    strategy:
      fail-fast: false

      matrix:
        node-version:
          - 12.18 # Node.js 12.18 uses package exports with trailing slashes
          - 12 # But Node.js 12.20+ uses package exports with subpath patterns
          - 18

        conditions:
          - require
          - import

        exclude:
          - conditions: import
            node-version: 12.18

    env:
      # Node.js conditions override from "require" to "import" etc
      # https://nodejs.org/api/cli.html#-c-condition---conditionscondition
      FLAGS: ${{ matrix.conditions != 'require' && format(' --conditions {0}', matrix.conditions) || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Restore build
        uses: ./.github/workflows/actions/build

      - name: Change Node.js version
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.node-version }}

      - run: node --eval "console.log(require.resolve('govuk-frontend'))"${{ env.FLAGS }}
      - run: node --eval "console.log(require.resolve('govuk-frontend/package.json'))"${{ env.FLAGS }}
      - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/components/accordion/accordion.bundle.js'))"${{ env.FLAGS }}
      - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/components/accordion/accordion.bundle.mjs'))"${{ env.FLAGS }}
      - run: node --eval "console.log(require.resolve('govuk-frontend/dist/govuk/i18n.mjs'))"${{ env.FLAGS }}

  regression:
    name: Percy
    needs: [install, build]

    # Skip when scheduled or run manually
    if: ${{ !inputs.runner }}

    # Run existing "Percy screenshots" workflow
    # (after install and build have been cached)
    uses: ./.github/workflows/screenshots.yml
    secrets: inherit
