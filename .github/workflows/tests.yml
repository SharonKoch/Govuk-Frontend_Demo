name: Tests

on:
  pull_request:

  push:
    branches:
      - main
      - 'feature/**'
      - 'support/**'

  workflow_dispatch:

concurrency:
  group: tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-node

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/workflows/actions/build

  lint:
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    needs: [install]

    strategy:
      fail-fast: false

      matrix:
        include:
          - description: Lint Sass
            name: lint-scss
            run: npm run lint:scss
            cache: .cache/stylelint

          - description: Lint JavaScript
            name: lint-js
            run: npm run lint:js
            cache: .cache/eslint

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Cache linter
        uses: actions/cache@v3
        with:
          key: ${{ matrix.name }}-cache
          path: ${{ matrix.cache }}

      - name: Run lint task
        run: ${{ matrix.run }}

  test:
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    needs: [install]

    strategy:
      fail-fast: false

      matrix:
        include:
          - description: Nunjucks macro tests
            name: test-macro
            run: npx jest --color --selectProjects "Nunjucks macro tests"

          - description: JavaScript unit tests
            name: test-unit
            run: npx jest --color --maxWorkers=2 --selectProjects "JavaScript unit tests" --coverage --testLocationInResults

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Cache Jest
        uses: actions/cache@v3
        with:
          key: ${{ matrix.name }}-cache
          path: .cache/jest

      - name: Run test task
        run: ${{ matrix.run }}

      - name: Save test coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.description }} coverage
          path: coverage
          if-no-files-found: ignore

  verify:
    name: ${{ matrix.description }}
    runs-on: ubuntu-latest
    needs: [install, build]

    strategy:
      fail-fast: false

      matrix:
        include:
          - description: Verify package build
            name: test-build-package
            run: npm run build:package

          - description: Verify distribution build
            name: test-build-dist
            run: npm run build:dist

          - description: JavaScript behaviour tests
            name: test-behaviour
            run: npx jest --color --maxWorkers=2 --selectProjects "JavaScript behaviour tests"

          - description: JavaScript component tests
            name: test-component
            run: npx jest --color --maxWorkers=2 --selectProjects "JavaScript component tests"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore dependencies
        uses: ./.github/workflows/actions/install-node

      - name: Restore build
        uses: ./.github/workflows/actions/build

      - name: Cache Jest
        uses: actions/cache@v3
        with:
          key: ${{ matrix.name }}-cache
          path: .cache/jest

      - name: Run verify task
        run: ${{ matrix.run }}

  regression:
    name: Percy
    needs: [install, build]

    # Run existing "Percy screenshots" workflow
    # (after install and build have been cached)
    uses: ./.github/workflows/screenshots.yml
    secrets: inherit
