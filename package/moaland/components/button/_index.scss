@include moaland-exports("moaland/component/button") {
  $moaland-button-colour: moaland-colour("green", $legacy: #00823b);
  $moaland-button-hover-colour: moaland-shade($moaland-button-colour, 20%);
  $moaland-button-shadow-colour: moaland-shade($moaland-button-colour, 60%);
  $moaland-button-text-colour: moaland-colour("white");

  // Secondary button variables
  $moaland-secondary-button-colour: moaland-colour("light-grey", $legacy: "grey-3");
  $moaland-secondary-button-hover-colour: moaland-shade($moaland-secondary-button-colour, 10%);
  $moaland-secondary-button-shadow-colour: moaland-shade($moaland-secondary-button-colour, 40%);
  $moaland-secondary-button-text-colour: moaland-colour("black");

  // Warning button variables
  $moaland-warning-button-colour: moaland-colour("red");
  $moaland-warning-button-hover-colour: moaland-shade($moaland-warning-button-colour, 20%);
  $moaland-warning-button-shadow-colour: moaland-shade($moaland-warning-button-colour, 60%);
  $moaland-warning-button-text-colour: moaland-colour("white");

  // Because the shadow (s0) is visually 'part of' the button, we need to reduce
  // the height of the button to compensate by adjusting its padding (s1) and
  // increase the bottom margin to include it (s2).
  $button-shadow-size: $moaland-border-width-form-element;

  .moaland-button {
    @include moaland-font($size: 19, $line-height: 19px);

    box-sizing: border-box;
    display: inline-block;
    position: relative;
    width: 100%;
    margin-top: 0;
    @include moaland-responsive-margin(6, "bottom", $adjustment: $button-shadow-size); // s2
    padding: (moaland-spacing(2) - $moaland-border-width-form-element) moaland-spacing(2) (moaland-spacing(2) - $moaland-border-width-form-element - ($button-shadow-size / 2)); // s1
    border: $moaland-border-width-form-element solid transparent;
    border-radius: 0;
    color: $moaland-button-text-colour;
    background-color: $moaland-button-colour;
    box-shadow: 0 $button-shadow-size 0 $moaland-button-shadow-colour; // s0
    text-align: center;
    vertical-align: top;
    cursor: pointer;
    -webkit-appearance: none;

    @include moaland-if-ie8 {
      border-bottom: $button-shadow-size solid $moaland-button-shadow-colour;
    }

    @include moaland-media-query($from: tablet) {
      width: auto;
    }

    // Ensure that any global link styles are overridden
    &:link,
    &:visited,
    &:active,
    &:hover {
      color: $moaland-button-text-colour;
      text-decoration: none;
    }

    // Fix unwanted button padding in Firefox
    &::-moz-focus-inner {
      padding: 0;
      border: 0;
    }

    &:hover {
      background-color: $moaland-button-hover-colour;
    }

    &:active {
      // Bump the button down so it looks like its being pressed in
      top: $button-shadow-size;

      @include moaland-if-ie8 {
        border-bottom-width: 0;
      }
    }

    &:focus {
      border-color: $moaland-focus-colour;
      // When colours are overridden, for example when users have a dark mode,
      // backgrounds and box-shadows disappear, so we need to ensure there's a
      // transparent outline which will be set to a visible colour.
      // Since Internet Explorer 8 does not support box-shadow, we want to force the user-agent outlines
      @include moaland-not-ie8 {
        outline: $moaland-focus-width solid transparent;
      }
      // Since Internet Explorer does not support `:not()` we set a clearer focus style to match user-agent outlines.
      @include moaland-if-ie8 {
        color: $moaland-focus-text-colour;
        background-color: $moaland-focus-colour;
      }
      box-shadow: inset 0 0 0 1px $moaland-focus-colour;
    }

    // alphagov/govuk_template includes a specific a:link:focus selector
    // designed to make unvisited links a slightly darker blue when focussed, so
    // we need to override the text colour for that combination of selectors so
    // so that unvisited links styled as buttons do not end up with dark blue
    // text when focussed.
    @include moaland-compatibility(govuk_template) {
      &:link:focus {
        color: $moaland-button-text-colour;
      }
    }

    &:focus:not(:active):not(:hover) {
      border-color: $moaland-focus-colour;
      color: $moaland-focus-text-colour;
      background-color: $moaland-focus-colour;
      box-shadow: 0 2px 0 $moaland-focus-text-colour;
    }

    // The following adjustments do not work for <input type="button"> as
    // non-container elements cannot include pseudo elements (i.e. ::before).

    // Use a pseudo element to expand the click target area to include the
    // button's shadow as well, in case users try to click it.
    &:before {
      content: "";
      display: block;

      position: absolute;

      top: -$moaland-border-width-form-element;
      right: -$moaland-border-width-form-element;
      bottom: -($moaland-border-width-form-element + $button-shadow-size);
      left: -$moaland-border-width-form-element;

      background: transparent;
    }

    // When the button is active it is shifted down by $button-shadow-size to
    // denote a 'pressed' state. If the user happened to click at the very top
    // of the button, their mouse is no longer over the button (because it has
    // 'moved beneath them') and so the click event is not fired.
    //
    // This corrects that by shifting the top of the pseudo element so that it
    // continues to cover the area that the user originally clicked, which means
    // the click event is still fired.
    //
    // ðŸŽ‰
    &:active:before {
      top: -($moaland-border-width-form-element + $button-shadow-size);
    }
  }

  .moaland-button--disabled,
  .moaland-button[disabled="disabled"],
  .moaland-button[disabled] {
    opacity: (.5);

    &:hover {
      background-color: $moaland-button-colour;
      cursor: default;
    }

    &:focus {
      outline: none;
    }

    &:active {
      top: 0;
      box-shadow: 0 $button-shadow-size 0 $moaland-button-shadow-colour; // s0
      @include moaland-if-ie8 {
        border-bottom: $button-shadow-size solid $moaland-button-shadow-colour; // s0
      }
    }
  }

  .moaland-button--secondary {
    background-color: $moaland-secondary-button-colour;
    box-shadow: 0 $button-shadow-size 0 $moaland-secondary-button-shadow-colour;

    &,
    &:link,
    &:visited,
    &:active,
    &:hover {
      color: $moaland-secondary-button-text-colour;
    }

    // alphagov/govuk_template includes a specific a:link:focus selector
    // designed to make unvisited links a slightly darker blue when focussed, so
    // we need to override the text colour for that combination of selectors so
    // so that unvisited links styled as buttons do not end up with dark blue
    // text when focussed.
    @include moaland-compatibility(govuk_template) {
      &:link:focus {
        color: $moaland-secondary-button-text-colour;
      }
    }

    &:hover {
      background-color: $moaland-secondary-button-hover-colour;

      &[disabled] {
        background-color: $moaland-secondary-button-colour;
      }
    }
  }

  .moaland-button--warning {
    background-color: $moaland-warning-button-colour;
    box-shadow: 0 $button-shadow-size 0 $moaland-warning-button-shadow-colour;

    &,
    &:link,
    &:visited,
    &:active,
    &:hover {
      color: $moaland-warning-button-text-colour;
    }

    // alphagov/govuk_template includes a specific a:link:focus selector
    // designed to make unvisited links a slightly darker blue when focussed, so
    // we need to override the text colour for that combination of selectors so
    // so that unvisited links styled as buttons do not end up with dark blue
    // text when focussed.
    @include moaland-compatibility(govuk_template) {
      &:link:focus {
        color: $moaland-warning-button-text-colour;
      }
    }

    &:hover {
      background-color: $moaland-warning-button-hover-colour;

      &[disabled] {
        background-color: $moaland-warning-button-colour;
      }
    }
  }

  .moaland-button--start {
    @include moaland-typography-weight-bold;
    @include moaland-typography-responsive($size: 24, $override-line-height: 1);

    display: -webkit-inline-box;

    display: -ms-inline-flexbox;

    display: inline-flex;
    min-height: auto;

    -webkit-box-pack: center;

        -ms-flex-pack: center;

            justify-content: center;
  }

  .moaland-button__start-icon {
    margin-left: moaland-spacing(1);

    @include moaland-media-query($from: desktop) {
      margin-left: moaland-spacing(2);
    }
    vertical-align: middle;
    -ms-flex-negative: 0;
        flex-shrink: 0;
    -ms-flex-item-align: center;
        align-self: center;
  }

  @if $moaland-use-legacy-font {
    // Begin adjustments for font baseline offset when using v1 of nta
    $offset: 2;

    .moaland-button {
      padding-top: (moaland-spacing(2) - $moaland-border-width-form-element - ($button-shadow-size / 2) + $offset); // s1
      padding-bottom: (moaland-spacing(2) - $moaland-border-width-form-element - ($button-shadow-size / 2) - $offset + 1); // s1
    }

    .moaland-button__start-icon {
      margin-top: -3px;
    }
  }
}
