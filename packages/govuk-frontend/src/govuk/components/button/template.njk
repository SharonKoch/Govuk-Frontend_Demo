{% from "../../macros/attributes.njk" import govukAttributes %}

{#- Set classes for this component #}
{%- set classNames = "govuk-button" -%}

{%- if params.classes %}
  {% set classNames = classNames + " " + params.classes %}
{% endif %}

{%- if params.isStartButton %}
  {% set classNames = classNames + " govuk-button--start" %}
{% endif %}

{#- Determine type of element to use, if not explicitly set #}
{%- if params.element %}
  {% set element = params.element | lower %}
{% else %}
  {% if params.href %}
    {% set element = 'a' %}
  {% else %}
    {% set element = 'button' %}
  {% endif %}
{% endif -%}

{%- macro _startIcon() %}
  {#- The SVG needs `focusable="false"` so that Internet Explorer does not
  treat it as an interactive element - without this it will be
  'focusable' when using the keyboard to navigate. #}
  <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
    <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z"/>
  </svg>
{%- endmacro -%}

{#- Define attributes for links only #}

{%- set attributesLinkHtml %}
  {{- govukAttributes({
    href: params.href
      if params.href
      else "#",
    role: "button",
    draggable: "false"
  }) -}}
{% endset %}

{#- Define attributes for buttons and inputs only #}

{%- set attributesButtonHtml %}
  {{- govukAttributes({
    value: {
      value: params.text
        if element == "input"
        else params.value,
      optional: true
    },
    type: params.type
      if params.type
      else "submit",
    name: {
      value: params.name,
      optional: true
    },
    disabled: {
      value: params.disabled,
      optional: true
    },
    "aria-disabled": {
      value: params.disabled | string
        if params.disabled !== undefined
        else undefined,
      optional: true
    },
    "data-prevent-double-click": {
      value: params.preventDoubleClick | string
        if params.preventDoubleClick !== undefined
        else undefined,
      optional: true
    }
  }) -}}
{% endset %}

{#- Define attributes for component #}

{%- set attributesHtml %}
  {{- (attributesButtonHtml if ["button", "input"].includes(element) else attributesLinkHtml) | safe -}}

  {{- govukAttributes({
    class: classNames,
    "data-module": "govuk-button",
    id: {
      value: params.id,
      optional: true
    }
  }) -}}
{% endset %}

{#- Actually create a button... or a link! #}

{%- if ["button", "a"].includes(element) %}
<{{ element }} {{- attributesHtml | safe }} {{- govukAttributes(params.attributes) }}>
  {{ params.html | safe | trim | indent(2) if params.html else params.text }}
  {{- _startIcon() | safe if params.isStartButton }}
</{{ element }}>

{%- elif element == 'input' %}
<input {{- attributesHtml | safe }} {{- govukAttributes(params.attributes) }}>
{%- endif %}
